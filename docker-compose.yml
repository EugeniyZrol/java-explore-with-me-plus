version: '3.8'
services:
  stats-db:
    image: postgres:13-alpine
    container_name: ewm_stats_db
    environment:
      POSTGRES_DB: stats
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "6541:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d stats" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s  # Добавить период ожидания
    volumes:
      - stats-db-data:/var/lib/postgresql/data
    restart: unless-stopped  # Добавить политику перезапуска

  main-db:
    image: postgres:13-alpine
    container_name: ewm_main_db
    environment:
      POSTGRES_DB: main
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "6542:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user -d main" ]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s
    volumes:
      - main-db-data:/var/lib/postgresql/data
    restart: unless-stopped

  stats-server:
    build: ./stats/stats-server
    container_name: ewm_stats_service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://stats-db:5432/stats
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_PROFILES_ACTIVE: docker  # Добавить профиль
    ports:
      - "9090:9090"
    depends_on:
      stats-db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:  # Добавить healthcheck для Spring Boot
      test: ["CMD", "curl", "-f", "http://localhost:9090/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  main-service:
    build: ./main-service
    container_name: ewm-main-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://main-db:5432/main
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      STATS_SERVER_URL: http://stats-server:9090  # Добавить URL stats сервера
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8080:8080"
    depends_on:
      main-db:
        condition: service_healthy
      stats-server:
        condition: service_healthy  # Требуется healthcheck для stats-server
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  stats-db-data:
  main-db-data: